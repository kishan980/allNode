import { AxiosInstance } from 'axios';
export interface CryptoWithdrawal {
    amount: number;
    currency: string;
    id: string;
}
export interface WithdrawalFeeEstimate {
    fee: string;
}
export declare class WithdrawAPI {
    private readonly apiClient;
    static readonly URL: {
        WITHDRAWALS: {
            CRYPTO: string;
            FEE_ESTIMATE: string;
        };
    };
    constructor(apiClient: AxiosInstance);
    /**
     * Withdraws funds to a crypto address.
     *
     * @param amount - The amount to withdraw
     * @param currency - The type of currency
     * @param cryptoAddress - A crypto address of the recipient
     * @param destinationTag - A destination tag for currencies that support one
     * @param addNetworkFeeToTotal - A boolean flag to add the network fee on top of the amount.
     * If this is blank, it will default to deducting the network fee from the amount.
     * @see https://docs.pro.coinbase.com/#crypto
     */
    postCryptoWithdrawal(amount: number, currency: string, cryptoAddress: string, destinationTag?: string, addNetworkFeeToTotal?: boolean): Promise<CryptoWithdrawal>;
    /**
     * Gets the network fee estimate when sending to the given address.
     *
     * @param currency - The type of currency
     * @param cryptoAddress - A crypto address of the recipient
     * @see https://docs.pro.coinbase.com/#fee-estimate
     */
    getFeeEstimate(currency: string, cryptoAddress: string): Promise<WithdrawalFeeEstimate>;
}
